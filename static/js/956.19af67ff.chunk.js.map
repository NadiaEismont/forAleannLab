{"version":3,"file":"static/js/956.19af67ff.chunk.js","mappings":"8LAkFA,IA3EgB,SAAC,GAAiD,IAA/CA,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACvCC,GAAOC,EAAAA,EAAAA,MACb,OACE,wBACGJ,EAAKK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,UAAvC,OACR,eACEC,KAAM,IAENC,UAAU,uFAHZ,UAKE,iBAAKA,UAAU,oDAAf,WACE,gBAAKA,UAAU,WAAf,UACE,gBACEA,UAAU,8BACVC,IAAG,UAAKJ,EAAS,GAAd,mBAA2BK,KAAKC,MACjB,IAAhBD,KAAKE,WAEPC,IAAI,QAGR,iBAAKL,UAAU,GAAf,WACE,SAAC,KAAD,CAAMM,GAAE,gBAAWb,GAAMc,MAAO,CAAEC,KAAMlB,GAAxC,UACE,eAAIU,UAAU,mFAAd,SACGL,OAGL,cAAGK,UAAU,yBAAb,SAAuCN,KAEvC,eAAGM,UAAU,yBAAb,WACE,SAAC,MAAD,CAAeA,UAAU,wCACxBJ,SAGL,gBAAKI,UAAU,OAAf,UACE,SAAC,MAAD,OAEF,iBAAKA,UAAU,sDAAf,WAEE,mBACEA,UAAU,WACVS,QACEvB,EAAUwB,MAAK,SAAAC,GAAG,OAAIA,EAAIlB,KAAOA,KAC7B,kBAAMJ,EAAYI,IAClB,kBACEL,EAAU,CACRK,GAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,UAAAA,KAZZ,SAgBGZ,EAAUwB,MAAK,SAAAC,GAAG,OAAIA,EAAIlB,KAAOA,MAChC,SAAC,MAAD,KAEA,SAAC,MAAD,CAAYO,UAAU,qDAI1B,0BACE,eAAGA,UAAU,yCAAb,yBAEGY,EAAAA,EAAAA,GAAUC,KAAKC,MAAMhB,IAFxB,mBAvDDL,U,6DCOf,UAlBgB,SAAC,GAA2C,IAAzCP,EAAwC,EAAxCA,UAAWE,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACvC,OACE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,eAAIW,UAAU,2BAAd,yBACA,0BACE,SAAC,IAAD,CACEd,UAAWA,EACXC,KAAMD,EACNE,UAAWA,EACXC,YAAaA,a,mBC8BzB,IA3CgB,SAAU0B,GACF,kBAATA,IACPA,EAAO,IAAIF,KAAKE,IAGpB,IACIC,EADAC,EAAUf,KAAKC,OAAO,IAAIU,KAASE,GAAQ,KAG3CG,EAAWhB,KAAKC,MAAMc,EAAU,SAgCpC,OA/BIC,GAAY,EACZF,EAAe,QAEfE,EAAWhB,KAAKC,MAAMc,EAAU,UAChB,EACZD,EAAe,SAEfE,EAAWhB,KAAKC,MAAMc,EAAU,SAChB,EACZD,EAAe,OAEfE,EAAWhB,KAAKC,MAAMc,EAAU,QAChB,EACZD,EAAe,QAEfE,EAAWhB,KAAKC,MAAMc,EAAU,MAChB,EACZD,EAAe,UAEfE,EAAWD,EACXD,EAAe,WAO/BE,EAAW,GAAkB,IAAbA,KAChBF,GAAgB,KAGbE,EAAW,IAAMF","sources":["components/JobList.jsx","pages/Cabinet.jsx","utils/utils.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { BsBookmark, BsBookmarkFill } from 'react-icons/bs';\nimport { useLocation } from 'react-router-dom';\nimport { MdLocationPin } from 'react-icons/md';\nimport { AiFillStar } from 'react-icons/ai';\nimport timeSince from 'utils/utils';\n\nconst JobList = ({ savedJobs, jobs, onJobSave, onJobDelete }) => {\n  const page = useLocation();\n  return (\n    <ul>\n      {jobs.map(({ id, name, title, address, pictures, createdAt }) => (\n        <li\n          size={600}\n          key={id}\n          className=\"font-sans font-family:Proxima Nova py-6 px-6 mb-2 border rounded-lg shadow-slate-50 \"\n        >\n          <div className=\"mx-auto flex flex-cols-4 flex-row justify-between\">\n            <div className=\"shrink-0\">\n              <img\n                className=\"rounded-full w-20 h-20 mr-6\"\n                src={`${pictures[0]}?random=${Math.floor(\n                  Math.random() * 100000,\n                )}`}\n                alt=\"\"\n              />\n            </div>\n            <div className=\"\">\n              <Link to={`/jobs/${id}`} state={{ from: page }}>\n                <h3 className=\"cursor-pointer font-bold text-2xl w-[750px] text-[#3A4562] hover:text-violet-300\">\n                  {title}\n                </h3>\n              </Link>\n              <p className=\"text-[#878D9D] text-lg\">{name}</p>\n\n              <p className=\"text-[#878D9D] text-lg\">\n                <MdLocationPin className=\"inline mr-1 fill-[#D8D8D8] text-2xl\" />\n                {address}\n              </p>\n            </div>\n            <div className=\"w-20\">\n              <AiFillStar />\n            </div>\n            <div className=\"flex flex-col justify-between mx-auto w-34 shrink-0\">\n              {/* <div className=\"justify-self-end  \"> */}\n              <button\n                className=\"self-end\"\n                onClick={\n                  savedJobs.some(job => job.id === id)\n                    ? () => onJobDelete(id)\n                    : () =>\n                        onJobSave({\n                          id,\n                          name,\n                          title,\n                          address,\n                          pictures,\n                          createdAt,\n                        })\n                }\n              >\n                {savedJobs.some(job => job.id === id) ? (\n                  <BsBookmarkFill />\n                ) : (\n                  <BsBookmark className=\"text-2xl mx-4 text-[#3A4562] hover:scale-125 \" />\n                )}\n              </button>\n\n              <div>\n                <p className=\"text-[#878D9D] text-lg justify-between\">\n                  Posted &nbsp;\n                  {timeSince(Date.parse(createdAt))} ago\n                </p>\n              </div>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default JobList;\n","import { Section, Container } from 'components';\nimport JobList from 'components/JobList';\n\nconst Cabinet = ({ savedJobs, onJobSave, onJobDelete }) => {\n  return (\n    <Section>\n      <Container>\n        <h2 className=\"text-lg font-normal mb-3\">Saved Jobs</h2>\n        <div>\n          <JobList\n            savedJobs={savedJobs}\n            jobs={savedJobs}\n            onJobSave={onJobSave}\n            onJobDelete={onJobDelete}\n          />\n        </div>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Cabinet;\n","var timeSince = function (date) {\n    if (typeof date !== 'object') {\n        date = new Date(date);\n    }\n\n    var seconds = Math.floor((new Date() - date) / 1000);\n    var intervalType;\n\n    var interval = Math.floor(seconds / 31536000);\n    if (interval >= 1) {\n        intervalType = 'year';\n    } else {\n        interval = Math.floor(seconds / 2592000);\n        if (interval >= 1) {\n            intervalType = 'month';\n        } else {\n            interval = Math.floor(seconds / 86400);\n            if (interval >= 1) {\n                intervalType = 'day';\n            } else {\n                interval = Math.floor(seconds / 3600);\n                if (interval >= 1) {\n                    intervalType = \"hour\";\n                } else {\n                    interval = Math.floor(seconds / 60);\n                    if (interval >= 1) {\n                        intervalType = \"minute\";\n                    } else {\n                        interval = seconds;\n                        intervalType = \"second\";\n                    }\n                }\n            }\n        }\n    }\n\n    if (interval > 1 || interval === 0) {\n        intervalType += 's';\n    }\n\n    return interval + ' ' + intervalType;\n};\n\nexport default timeSince;"],"names":["savedJobs","jobs","onJobSave","onJobDelete","page","useLocation","map","id","name","title","address","pictures","createdAt","size","className","src","Math","floor","random","alt","to","state","from","onClick","some","job","timeSince","Date","parse","date","intervalType","seconds","interval"],"sourceRoot":""}